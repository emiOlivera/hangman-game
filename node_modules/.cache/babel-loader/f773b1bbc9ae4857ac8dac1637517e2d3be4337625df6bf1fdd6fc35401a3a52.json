{"ast":null,"code":"import React,{useContext,useState,useEffect}from'react';import Contexto from'../Contexto/Contexto';import{useNavigate}from'react-router-dom';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Player2=()=>{const{player2,arrayPalabra,setPlayer1,setPlayer2,setPalabra,setArrayPalabra}=useContext(Contexto);const letras=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','ñ','o','p','q','r','s','t','u','v','w','x','y','z'];const[error,setError]=useState(0);const[acierto,setAcierto]=useState(0);const[elegidas,setElegidas]=useState([]);const[botonEstado,setBotonEstado]=useState(Array(26).fill(''));let imagen=\"error\".concat(error);const navegacion=useNavigate();useEffect(()=>{const palabraCompletada=arrayPalabra.flat().every(letra=>elegidas.includes(letra));if(palabraCompletada){navegacion(\"/player1-lost\");}},[elegidas,arrayPalabra,navegacion]);useEffect(()=>{window.onpopstate=e=>{setPalabra([]);setArrayPalabra([]);};});const elegir=(letra,index)=>{if(!elegidas.includes(letra)){setElegidas([...elegidas,letra]);if(arrayPalabra.some(palabra=>palabra.includes(letra))){setAcierto(acierto+1);const nuevosEstados=[...botonEstado];nuevosEstados[index]='verde';setBotonEstado(nuevosEstados);}else{setError(error+1);const nuevosEstados=[...botonEstado];nuevosEstados[index]='rojo';setBotonEstado(nuevosEstados);if(error==6){navegacion(\"/player2-lost\");}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"player2\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Turno de \",player2]}),/*#__PURE__*/_jsxs(\"div\",{className:\"interfaz\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"palabra\",children:arrayPalabra.map((palabra,index)=>/*#__PURE__*/_jsx(\"span\",{children:palabra.map((letra,i)=>elegidas.includes(letra)?/*#__PURE__*/_jsx(\"span\",{children:letra},i):/*#__PURE__*/_jsx(\"span\",{children:\"-\"},i))},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"imagen\",children:/*#__PURE__*/_jsx(\"img\",{src:require(\"./images/\".concat(imagen,\".png\")),alt:\"\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"letras\",children:letras.map((letra,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>elegir(letra,index),className:botonEstado[index],disabled:elegidas.includes(letra),children:letra},letra))})]});};export default Player2;","map":{"version":3,"names":["React","useContext","useState","useEffect","Contexto","useNavigate","jsxs","_jsxs","jsx","_jsx","Player2","player2","arrayPalabra","setPlayer1","setPlayer2","setPalabra","setArrayPalabra","letras","error","setError","acierto","setAcierto","elegidas","setElegidas","botonEstado","setBotonEstado","Array","fill","imagen","concat","navegacion","palabraCompletada","flat","every","letra","includes","window","onpopstate","e","elegir","index","some","palabra","nuevosEstados","className","children","map","i","src","require","alt","onClick","disabled"],"sources":["C:/Users/Usuario/Desktop/hangman-game/src/componentes/Player2.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Contexto from '../Contexto/Contexto';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst Player2 = () => {\r\n  const { player2, arrayPalabra, setPlayer1, setPlayer2, setPalabra, setArrayPalabra } = useContext(Contexto);\r\n  const letras = [\r\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\r\n    'l', 'm', 'n', 'ñ', 'o', 'p', 'q', 'r', 's', 't', 'u',\r\n    'v', 'w', 'x', 'y', 'z'\r\n  ];\r\n  const [error, setError] = useState(0);\r\n  const [acierto, setAcierto] = useState(0);\r\n  const [elegidas, setElegidas] = useState([]);\r\n  const [botonEstado, setBotonEstado] = useState(Array(26).fill(''))\r\n  let imagen  = `error${error}`\r\n\r\n  const navegacion = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const palabraCompletada = arrayPalabra.flat().every(letra => elegidas.includes(letra));\r\n    if (palabraCompletada) {\r\n      navegacion(\"/player1-lost\");\r\n    }\r\n  }, [elegidas, arrayPalabra, navegacion]);\r\n\r\n      useEffect(() => {\r\n      window.onpopstate = e => {\r\n        setPalabra([])\r\n        setArrayPalabra([])\r\n      };\r\n    });\r\n\r\n  const elegir = (letra, index) => {\r\n    if (!elegidas.includes(letra)) {\r\n      setElegidas([...elegidas, letra]);\r\n      if (arrayPalabra.some(palabra => palabra.includes(letra))) {\r\n        setAcierto(acierto + 1);\r\n        const nuevosEstados = [...botonEstado];\r\n        nuevosEstados[index] = 'verde';\r\n        setBotonEstado(nuevosEstados);\r\n      } else {\r\n        setError(error + 1);\r\n        const nuevosEstados = [...botonEstado];\r\n        nuevosEstados[index] = 'rojo';\r\n        setBotonEstado(nuevosEstados);\r\n        if (error == 6){\r\n          navegacion(\"/player2-lost\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='player2'>\r\n      <h1>Turno de {player2}</h1>\r\n    <div className='interfaz'>\r\n      <div className=\"palabra\">\r\n        {arrayPalabra.map((palabra, index) => (\r\n          <span key={index}>\r\n            {palabra.map((letra, i) => (\r\n              elegidas.includes(letra) ? <span key={i}>{letra}</span> : <span key={i}>-</span>\r\n            ))}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <div className='imagen'>\r\n      <img src={require(`./images/${imagen}.png`)} alt=\"\" />\r\n      </div>\r\n      </div>\r\n      <div className=\"letras\">\r\n        {letras.map((letra, index) => (\r\n          <button\r\n            key={letra}\r\n            onClick={() => elegir(letra, index)}\r\n            className={botonEstado[index]}\r\n            disabled={elegidas.includes(letra)}\r\n          >\r\n            {letra}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}