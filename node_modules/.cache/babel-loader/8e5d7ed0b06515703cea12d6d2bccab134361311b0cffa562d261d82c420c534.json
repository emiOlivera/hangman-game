{"ast":null,"code":"import React,{useContext,useEffect}from'react';import Contexto from'../Contexto/Contexto';import{useNavigate}from'react-router-dom';import imagen from'./images/injuryBear.png';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const PlayerTwoLost=()=>{const{player1,player2,setPalabra,setArrayPalabra,setPlayer1,setPlayer2}=useContext(Contexto);const navegacion=useNavigate();const revancha=()=>{setPalabra([]);setArrayPalabra([]);navegacion(\"/Player1\");};const inicio=()=>{setPalabra([]);setArrayPalabra([]);setPlayer1(\"\");setPlayer2(\"\");navegacion(\"/\");};const cambiar=()=>{let auxiliar=player1;setPlayer1(player2);setPlayer2(auxiliar);setPalabra([]);setArrayPalabra([]);navegacion(\"/player1\");};useEffect(()=>{const volver=event=>{event.preventDefault();setPalabra([]);setPlayer1(\"\");setPlayer2(\"\");navegacion('/');};window.addEventListener('beforeunload',volver);return()=>{window.removeEventListener('beforeunload',volver);};},[setPalabra,setPlayer1,setPlayer2,navegacion]);return/*#__PURE__*/_jsxs(\"div\",{className:\"lost2\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[player1,\" es el/la ganador/a \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[player2,\", mas suerte la proxima vez\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"imagenFinal\",children:/*#__PURE__*/_jsx(\"img\",{src:imagen,alt:\"\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"botones\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:revancha,children:\"Revancha\"}),/*#__PURE__*/_jsx(\"button\",{onClick:cambiar,children:\"Cambiar Roles\"}),/*#__PURE__*/_jsx(\"button\",{onClick:inicio,children:\"Inicio\"})]})]});};export default PlayerTwoLost;","map":{"version":3,"names":["React","useContext","useEffect","Contexto","useNavigate","imagen","jsxs","_jsxs","jsx","_jsx","PlayerTwoLost","player1","player2","setPalabra","setArrayPalabra","setPlayer1","setPlayer2","navegacion","revancha","inicio","cambiar","auxiliar","volver","event","preventDefault","window","addEventListener","removeEventListener","className","children","src","alt","onClick"],"sources":["C:/Users/Usuario/Desktop/hangman-game/src/componentes/PlayerTwoLost.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport Contexto from '../Contexto/Contexto'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport imagen from './images/injuryBear.png'\r\n\r\nconst PlayerTwoLost = () => {\r\n\r\n    const {player1, player2, setPalabra, setArrayPalabra, setPlayer1, setPlayer2} = useContext(Contexto)\r\n    const navegacion = useNavigate();\r\n\r\n    const revancha = () => {\r\n      setPalabra([]);\r\n      setArrayPalabra([]);\r\n      navegacion(\"/Player1\")\r\n    }\r\n    const inicio = () => {\r\n      setPalabra([]);\r\n      setArrayPalabra([]);\r\n      setPlayer1(\"\")\r\n      setPlayer2(\"\")\r\n      navegacion(\"/\")\r\n    }\r\n\r\n    const cambiar = () => {\r\n      let auxiliar = player1;\r\n      setPlayer1(player2);\r\n      setPlayer2(auxiliar);\r\n      setPalabra([]);\r\n      setArrayPalabra([]);\r\n      navegacion(\"/player1\")\r\n    }\r\n\r\n    useEffect(() => {\r\n      const volver = (event) => {\r\n        event.preventDefault();\r\n        setPalabra([]);\r\n        setPlayer1(\"\")\r\n        setPlayer2(\"\")\r\n        navegacion('/');\r\n      };\r\n  \r\n      window.addEventListener('beforeunload', volver);\r\n  \r\n      return () => {\r\n        window.removeEventListener('beforeunload', volver);\r\n      };\r\n    }, [setPalabra, setPlayer1, setPlayer2, navegacion]);\r\n\r\n  return (\r\n    <div className='lost2'>\r\n      <h1>{player1} es el/la ganador/a </h1>\r\n      <span>{player2}, mas suerte la proxima vez</span>\r\n      <div className='imagenFinal'>\r\n        <img src={imagen} alt=\"\" />\r\n      </div>\r\n      <div className='botones'>\r\n        <button onClick={revancha}>Revancha</button>\r\n        <button onClick={cambiar}>Cambiar Roles</button>\r\n        <button onClick={inicio}>Inicio</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerTwoLost\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CACpD,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,yBAAyB,QAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAExB,KAAM,CAACC,OAAO,CAAEC,OAAO,CAAEC,UAAU,CAAEC,eAAe,CAAEC,UAAU,CAAEC,UAAU,CAAC,CAAGf,UAAU,CAACE,QAAQ,CAAC,CACpG,KAAM,CAAAc,UAAU,CAAGb,WAAW,CAAC,CAAC,CAEhC,KAAM,CAAAc,QAAQ,CAAGA,CAAA,GAAM,CACrBL,UAAU,CAAC,EAAE,CAAC,CACdC,eAAe,CAAC,EAAE,CAAC,CACnBG,UAAU,CAAC,UAAU,CAAC,CACxB,CAAC,CACD,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBN,UAAU,CAAC,EAAE,CAAC,CACdC,eAAe,CAAC,EAAE,CAAC,CACnBC,UAAU,CAAC,EAAE,CAAC,CACdC,UAAU,CAAC,EAAE,CAAC,CACdC,UAAU,CAAC,GAAG,CAAC,CACjB,CAAC,CAED,KAAM,CAAAG,OAAO,CAAGA,CAAA,GAAM,CACpB,GAAI,CAAAC,QAAQ,CAAGV,OAAO,CACtBI,UAAU,CAACH,OAAO,CAAC,CACnBI,UAAU,CAACK,QAAQ,CAAC,CACpBR,UAAU,CAAC,EAAE,CAAC,CACdC,eAAe,CAAC,EAAE,CAAC,CACnBG,UAAU,CAAC,UAAU,CAAC,CACxB,CAAC,CAEDf,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,MAAM,CAAIC,KAAK,EAAK,CACxBA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtBX,UAAU,CAAC,EAAE,CAAC,CACdE,UAAU,CAAC,EAAE,CAAC,CACdC,UAAU,CAAC,EAAE,CAAC,CACdC,UAAU,CAAC,GAAG,CAAC,CACjB,CAAC,CAEDQ,MAAM,CAACC,gBAAgB,CAAC,cAAc,CAAEJ,MAAM,CAAC,CAE/C,MAAO,IAAM,CACXG,MAAM,CAACE,mBAAmB,CAAC,cAAc,CAAEL,MAAM,CAAC,CACpD,CAAC,CACH,CAAC,CAAE,CAACT,UAAU,CAAEE,UAAU,CAAEC,UAAU,CAAEC,UAAU,CAAC,CAAC,CAEtD,mBACEV,KAAA,QAAKqB,SAAS,CAAC,OAAO,CAAAC,QAAA,eACpBtB,KAAA,OAAAsB,QAAA,EAAKlB,OAAO,CAAC,sBAAoB,EAAI,CAAC,cACtCJ,KAAA,SAAAsB,QAAA,EAAOjB,OAAO,CAAC,6BAA2B,EAAM,CAAC,cACjDH,IAAA,QAAKmB,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BpB,IAAA,QAAKqB,GAAG,CAAEzB,MAAO,CAAC0B,GAAG,CAAC,EAAE,CAAE,CAAC,CACxB,CAAC,cACNxB,KAAA,QAAKqB,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBpB,IAAA,WAAQuB,OAAO,CAAEd,QAAS,CAAAW,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC5CpB,IAAA,WAAQuB,OAAO,CAAEZ,OAAQ,CAAAS,QAAA,CAAC,eAAa,CAAQ,CAAC,cAChDpB,IAAA,WAAQuB,OAAO,CAAEb,MAAO,CAAAU,QAAA,CAAC,QAAM,CAAQ,CAAC,EACrC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}