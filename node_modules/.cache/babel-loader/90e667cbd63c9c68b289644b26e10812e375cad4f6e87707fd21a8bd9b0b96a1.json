{"ast":null,"code":"import{useState}from\"react\";import Contexto from\"./Contexto\";import{jsx as _jsx}from\"react/jsx-runtime\";const Provider=_ref=>{let{children}=_ref;const[player1,setPlayer1]=useState(\"\");const[player2,setPlayer2]=useState(\"\");const[palabra,setPalabra]=useState([]);const[arrayPalabra,setArrayPalabra]=useState([]);return/*#__PURE__*/_jsx(Contexto.Provider,{value:{setPlayer1,setPlayer2,player1,player2,palabra,setPalabra,setArrayPalabra,arrayPalabra},children:children});};export default Provider;","map":{"version":3,"names":["useState","Contexto","jsx","_jsx","Provider","_ref","children","player1","setPlayer1","player2","setPlayer2","palabra","setPalabra","arrayPalabra","setArrayPalabra","value"],"sources":["C:/Users/Usuario/Desktop/hangman-game/src/Contexto/Provider.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport Contexto from \"./Contexto\"\r\n\r\nconst Provider = ({children}) => {\r\n  const [player1, setPlayer1] = useState(\"\")\r\n  const [player2, setPlayer2] = useState(\"\")\r\n  const [palabra, setPalabra] = useState([])\r\n  const [arrayPalabra, setArrayPalabra] = useState([]);\r\n  return (\r\n    <Contexto.Provider value={{\r\n    setPlayer1, \r\n    setPlayer2,\r\n    player1,\r\n    player2,\r\n    palabra,\r\n    setPalabra,\r\n    setArrayPalabra,\r\n    arrayPalabra\r\n    }}>\r\n        {children}\r\n    </Contexto.Provider>\r\n  )\r\n}\r\n\r\nexport default Provider\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,QAAQ,KAAM,YAAY,QAAAC,GAAA,IAAAC,IAAA,yBAEjC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAgB,IAAf,CAACC,QAAQ,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpD,mBACEG,IAAA,CAACF,QAAQ,CAACG,QAAQ,EAACW,KAAK,CAAE,CAC1BP,UAAU,CACVE,UAAU,CACVH,OAAO,CACPE,OAAO,CACPE,OAAO,CACPC,UAAU,CACVE,eAAe,CACfD,YACA,CAAE,CAAAP,QAAA,CACGA,QAAQ,CACM,CAAC,CAExB,CAAC,CAED,cAAe,CAAAF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}